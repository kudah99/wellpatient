# Generated by Django 5.1.7 on 2025-03-27 14:54

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("country", models.CharField(default="Kenya", max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
            ],
            options={
                "verbose_name": "Location",
                "verbose_name_plural": "Locations",
                "ordering": ["city", "name"],
            },
        ),
        migrations.CreateModel(
            name="Medication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "refill_period_days",
                    models.PositiveIntegerField(
                        default=30, help_text="Days between refills"
                    ),
                ),
            ],
            options={
                "verbose_name": "Medication",
                "verbose_name_plural": "Medications",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "template_sms",
                    models.TextField(help_text="Template for SMS with {placeholders}"),
                ),
                (
                    "template_whatsapp",
                    models.TextField(
                        help_text="Template for WhatsApp with {placeholders}"
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Type",
                "verbose_name_plural": "Notification Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BroadcastMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "broadcast_type",
                    models.CharField(
                        choices=[
                            ("MARKETING", "Marketing"),
                            ("PROMOTIONAL", "Promotional"),
                            ("INFORMATIONAL", "Informational"),
                            ("EMERGENCY", "Emergency"),
                        ],
                        max_length=15,
                    ),
                ),
                ("send_sms", models.BooleanField(default=True)),
                ("send_whatsapp", models.BooleanField(default=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SCHEDULED", "Scheduled"),
                            ("SENDING", "Sending"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="DRAFT",
                        max_length=10,
                    ),
                ),
                ("scheduled_time", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "locations",
                    models.ManyToManyField(
                        blank=True, related_name="broadcasts", to="patients.location"
                    ),
                ),
            ],
            options={
                "verbose_name": "Broadcast Message",
                "verbose_name_plural": "Broadcast Messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("address", models.TextField(blank=True)),
                (
                    "notification_preference",
                    models.CharField(
                        choices=[
                            ("SMS", "SMS Only"),
                            ("WA", "WhatsApp Only"),
                            ("BOTH", "SMS and WhatsApp"),
                            ("NONE", "No Notifications"),
                        ],
                        default="BOTH",
                        max_length=4,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="patients",
                        to="patients.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient",
                "verbose_name_plural": "Patients",
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[("SMS", "SMS"), ("WA", "WhatsApp")], max_length=3
                    ),
                ),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SENT", "Sent"),
                            ("DELIVERED", "Delivered"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("status_message", models.TextField(blank=True)),
                ("scheduled_time", models.DateTimeField()),
                ("sent_time", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "notification_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.notificationtype",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Log",
                "verbose_name_plural": "Notification Logs",
                "ordering": ["-scheduled_time"],
            },
        ),
        migrations.CreateModel(
            name="PatientMedication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dosage", models.CharField(blank=True, max_length=100)),
                ("instructions", models.TextField(blank=True)),
                ("start_date", models.DateField()),
                ("next_refill_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "medication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.medication",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "Patient Medication",
                "verbose_name_plural": "Patient Medications",
                "unique_together": {("patient", "medication")},
            },
        ),
        migrations.AddField(
            model_name="patient",
            name="medications",
            field=models.ManyToManyField(
                through="patients.PatientMedication", to="patients.medication"
            ),
        ),
    ]
